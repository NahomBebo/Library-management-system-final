
#include <iostream>
#include <string>
#include <limits>
using namespace std;

string patron_info[100][4] = {
    {"Alex Johnson", "Gender: Male", "Phone Number: 555-123-4567", "1"},
    {"Emily Smith", "Gender: Female", "Phone Number: 555-234-5678", "2"},
    {"Max Williams", "Gender: Male", "Phone Number: 555-345-6789", "3"},
    {"Olivia Brown", "Gender: Female", "Phone Number: 555-456-7890", "4"},
    {"Ethan Davis", "Gender: Male", "Phone Number: 555-567-8901", "5"},
    {"Sophia Miller", "Gender: Female", "Phone Number: 555-678-9012", "6"},
    {"Liam Wilson", "Gender: Male", "Phone Number: 555-789-0123", "7"},
    {"Ava Garcia", "Gender: Female", "Phone Number: 555-890-1234", "8"},
    {"Noah Martinez", "Gender: Male", "Phone Number: 555-901-2345", "9"},
    {"Isabella Rodriguez", "Gender: Female", "Phone Number: 555-012-3456", "10"},
    {"Aiden Lopez", "Gender: Male", "Phone Number: 555-123-4567", "11"},
    {"Mia Lee", "Gender: Female", "Phone Number: 555-234-5678", "12"},
    {"Lucas Hernandez", "Gender: Male", "Phone Number: 555-345-6789", "13"},
    {"Charlotte Nguyen", "Gender: Female", "Phone Number: 555-456-7890", "14"},
    {"James Kim", "Gender: Male", "Phone Number: 555-567-8901", "15"},
    {"Lily Patel", "Gender: Female", "Phone Number: 555-678-9012", "16"},
    {"Benjamin Singh", "Gender: Male", "Phone Number: 555-789-0123", "17"},
    {"Grace Khan", "Gender: Female", "Phone Number: 555-890-1234", "18"},
    {"Henry Li", "Gender: Male", "Phone Number: 555-901-2345", "19"},
    {"Zoey Williams", "Gender: Female", "Phone Number: 555-012-3456", "20"}
    // {"a","Gender: Female", "Phone Number: 555-012-3456", "20"}
};

string catalog[100][2] = {
    /*Digital Electronics:*/
    {"Digital Design", "M. Morris Mano"},
    {"Digital Systems: Principles and Applications", "Ronald J. Tocci, Neal S. Widmer, and Gregory L. Moss"},
    {"Digital Electronics: Principles and Applications", "Roger L. Tokheim"},
    {"Fundamentals of Digital Logic with Verilog Design", "Stephen Brown and Zvonko Vranesic"},
    {"Digital Integrated Circuits", "Jan M. Rabaey, Anantha Chandrakasan, and Borivoje Nikolic"},
    /*C++:*/
    {"C++ Primer", "Stanley B. Lippman, Jos√©e Lajoie, and Barbara E. Moo"},
    {"Effective Modern C++", "Scott Meyers"},
    {"Accelerated C++", "Andrew Koenig and Barbara E. Moo"},
    {"The C++ Programming Language", "Bjarne Stroustrup"},
    {"C++ Templates: The Complete Guide", "David Vandevoorde and Nicolai M. Josuttis"},

    /*Java:*/
    {"Effective Java", "Joshua Bloch"},
    {"Head First Java", "Kathy Sierra and Bert Bates"},
    {"Java: The Complete Reference", "Herbert Schildt"},
    {"Thinking in Java", "Bruce Eckel"},
    {"Java Concurrency in Practice", "Brian Goetz, Tim Peierls, Joshua Bloch, Joseph Bowbeer, David Holmes, and Doug Lea"},

    /*Python:*/
    {"Python Crash Course", "Eric Matthes"},
    {"Automate the Boring Stuff with Python", "Al Sweigart"},
    {"Fluent Python", "Luciano Ramalho"},
    {"Learning Python", "Mark Lutz"},
    {"Python Cookbook", "David Beazley and Brian K. Jones"},

    /*Networking:*/
    {"Computer Networking: A Top-Down Approach", "James F. Kurose and Keith W. Ross"},
    {"TCP/IP Illustrated", "Kevin R. Fall and W. Richard Stevens"},
    {"Computer Networks", "Andrew S. Tanenbaum and David J. Wetherall"},
    {"Data and Computer Communications", "William Stallings"},
    {"Network Warrior", "Gary A. Donahue"},
    {"Networking for Dummies", "Doug Lowe"},
    {"C++ Network Programming", "Douglas C. Schmidt"},
    {"Java Network Programming", "Elliotte Rusty Harold"},
    {"Python Networking Programming Cookbook", "M. O. Faruque Sarker"},
    {"C++ Network Programming, Volume 1: Mastering Complexity with ACE and Patterns", "Douglas C. Schmidt"},
    {"Networking All-in-One For Dummies", "Doug Lowe"},
    {"Java Network Programming", "Merlin Hughes, Michael Shoffner, and Derek Hamner"},
    {"Python Network Programming Cookbook", "Dr. M. O. Faruque Sarker"},
    {"C++ Network Programming, Volume 2: Systematic Reuse with ACE and Frameworks", "Douglas C. Schmidt"},
    {"Networking Essentials", "Jeffrey S. Beasley and Piyasat Nilkaew"},
    {"Java Network Programming, 4th Edition", "Elliotte Rusty Harold and Michael T. Urban"},
    {"Networking For Dummies", "Doug Lowe"},

    /*Data Structures:*/
    {"Data Structures and Algorithm Analysis in C++", "Mark A. Weiss"},
    {"Data Structures and Algorithms in Java", "Robert Lafore"},
    {"Introduction to the Design and Analysis of Algorithms", "Anany Levitin"},
    {"Data Structures and Algorithm Analysis in Python", "Clifford A. Shaffer"},
    {"Algorithms", "Robert Sedgewick and Kevin Wayne"},
    {"Data Structures and Algorithms Made Easy", "Narasimha Karumanchi"},
    {"The Algorithm Design Manual", "Steven S. Skiena"},
    {"Data Structures Using C", "Aaron M. Tenenbaum, Yedidyah Langsam, and Moshe J. Augenstein"},
    {"Algorithms in C++", "Robert Sedgewick"},
    {"Data Structures and Algorithms Made Easy in Java", "Narasimha Karumanchi"},
    {"Programming: Principles and Practice Using C++", "Bjarne Stroustrup"},
    {"Java Foundations", "John Lewis and Peter DePasquale"},
    {"Python for Data Analysis", "Wes McKinney"}
    // {"a", "b"},
    // {"c", "d"},
    // {"e", "f"},
    // {"g","h"}
    };

int main(){
    int book_counter = 50;
    int patron_counter = 20;
    int limit = 3;

    int info_borrowed[100][2];
    int info_counter = 0;

    string taken_books[100];
    int taken_counter = 0;

    while(true){
        // Choice variable to store the choice
        // Poin to go to
        main:
bool validInput=false;
  int choice; 
  do{
            
        cout << "1. Add Book" << endl;
        cout << "2. Remove Book" << endl;
        cout << "3. Borrow Book" << endl;
        cout << "4. Return Book" << endl;
        cout << "5. Search Book" << endl;
        cout << "6. Display Book Details" << endl;
        cout << "7. Add Patron" << endl;
        cout << "8. Display Patron Details" << endl;
        cout << "9. search patron by their name" << endl;
        cout << "10. Display report" << endl;
        cout << "0. Exit" << endl;
        if (cin >> choice) {
            if (choice >= 1 && choice <= 12) {
                validInput = true;
            } else {
                cout << "Invalid input. Please enter a number between 0 and 10." << endl;
            }
        } else {
            cout << "Invalid input. Please enter a valid number." <<endl;
            cin.clear();
            cin.ignore(std::numeric_limits<std::streamsize>::max(), '\n');
        }
    } while (!validInput);

validInput=false;
        
    

        if(choice == 1){
            string book_name;
            string book_author;

            cout << "Please enter the name of the book: ";
            cin.ignore();
            getline(cin,book_name);

            cout << "Please enter the name of the author: ";
            cin >> book_author;

            catalog[book_counter][0] = book_name;
            catalog[book_counter][1] = book_author;

            // adding the number of books by 1
            book_counter ++;    
             cout << "\033[H\033[2J";
            cout << "ADDED THE BOOKS SUCCESFULLY" << endl;       
        }

        else if(choice == 2){
            string book_name;
            string book_author;

            cout << "Please enter the name of the book: ";
            cin >> book_name;

            cout << "Please enter the name of the author: ";
            cin >> book_author;

            // Searching throgh the catalog to remove the data
            for(int i=0; i<book_counter-1; i++){
                // if the data matches what the user has enterd it will make the entry "0"
                if(catalog[i][0] == book_name && catalog[i][1] == book_author){
                   catalog[i][0] = "0";
                   catalog[i][1] = "0"; 
                }
            }
            // removing the number of books by 1
            book_counter --; 
             cout << "\033[H\033[2J";
            cout << "REMOVED THE BOOKS SUCCESFULLY" << endl;
        }
        else if(choice == 3){
            /* HOW THIS PART WORKS: */

            /* 1, We Go check if the ths students exists */
            /* 2, we check if the book is available */
            /* 3, We check if the user has borrowed if he did we check how many times he took and if its more than the limit we dont allow */
            /* 4, if the user hasnt borrowed add him to the info_borrowed */
            /* 5, we will remove the book from the catalog cause its taken */

            /* -----------------------------------------------end----------------------------------------------------------------------- */
            string name;
            string book_name;
            string book_author;
            cout << "what is the name of the student: " << endl;
            cin.ignore();
            getline(cin,name);
            
            cout << "What is the name of the book: " << endl;
            
            getline(cin,book_name);
            
            cout << "What is the authors name: " << endl;
            
            getline(cin,book_author);

            for(int i=0; i<=patron_counter; i++){
                // STEP 1: Check if the ths students exists
                if(patron_info[i][0] == name){
                    string id_str = patron_info[i][3]; 
                    int id_int = atoi(id_str.c_str());                                            // u didnt learn this

                    // STEP 2: We check if the book is available
                    for(int j=0; j<=book_counter; j++){

                        if(catalog[j][0] == book_name && catalog[j][1] == book_author){
                            // STEP 3: Checking if the user has borrowed
                            for(int k=0; k<=info_counter; k++){ 
                                if(info_borrowed[k][0] == id_int){
                                    // STEP 3: Chechking if they have exceed the limit 
                                    if(info_borrowed[k][1] < limit){

                                        info_borrowed[k][1] +=1;
                                        taken_books[taken_counter] = book_name;
                                        taken_counter++;
 cout << "\033[H\033[2J";
                                        cout << "BORROWED THE BOOK SUCCESSFULLY" << endl;
                                        // STEP 5: Removing the book from the catalog
                                        catalog[j][0] = "0";
                                        catalog[j][1] = "0";

                                        book_counter --;
                                        goto main;
                                    }
                                    else{
                                         cout << "\033[H\033[2J";
                                        cout << "Cannot borrow books anymore You have execced the limit " << endl;
                                        goto main;
                                    }                                
                                }
                            }
                            // STEP:4 Adding him if he hasn't borrowed
                            info_borrowed[info_counter][0] = id_int;
                            info_borrowed[info_counter][1] = 1;

                            taken_books[taken_counter] = book_name;
                            taken_counter++;
                            info_counter++;

                            catalog[j][0] = "0";
                            catalog[j][1] = "0";

                            book_counter --;
                             cout << "\033[H\033[2J";
                            cout << "BORROWED THE BOOK SUCCESSFULLY" << endl;
                            goto main;
                        }

                    }
                }                
            }
             cout << "\033[H\033[2J";
            cout << "Either the book is taken or the student is not in the list" << endl;
            cout << "Please add those first "<< endl;
            goto main; 
        }  
        else if(choice == 4){
            /* HOW THIS PART WORKS: */

            /* 1, Checking if the student exist */
            /* 2, Checking if the specific student borrowed a book */
            /* 3, Checking if the book is borrowed */
            /* 4, Removing it from the taken books */
            /* 5, Decrease the number of borrowed books for that user */
            /* 6, Adding the book to the catalog */

            /* -----------------------------------------------end----------------------------------------------------------------------- */

            string name;
            string book_name;
            string book_author;
            cout << "what is the name of the student: " << endl;
            cin.ignore();
            getline(cin,name);

            cout << "What is the name of the book: " << endl;
            getline(cin,book_name);

            cout << "What is the authors name: " << endl;
            getline(cin,book_author);

            for(int i=0; i<=patron_counter; i++){
                if(patron_info[i][0] == name){
                    // STEP 1: Checking if the student exist

                    string id_str = patron_info[i][3]; 
                    int id_int = atoi(id_str.c_str());                                               // u didnt learn this

                    // STEP 2: Checking if the specific student borrowed a book
                    for(int j=0; j<=info_counter; j++){
                        if(info_borrowed[j][0] == id_int){

                            // STEP 3: Checking if the book is borrowed
                            for(int k=0; k<=taken_counter; k++){ 
                                if(taken_books[k] == book_name){
                                    // STEP 4: Removing it from the taken books
                                    taken_books[k] = "0";
                                    // STEP 5: Decrease the number of books for that user
                                    info_borrowed[j][1] -= 1; 

                                    // STEP 6: Adding the book to the catalog
                                    catalog[book_counter][0] = book_name;
                                    catalog[book_counter][1] = book_author;

                                    book_counter++;
                                     cout << "\033[H\033[2J";
                                    cout << "Returend book, Thank You" << endl;  

                                    goto main;                            
                                }
                            }
                        }
                    }
                }                
            }
           
            cout << "\033[H\033[2J";
             cout<<name<<endl;
            cout<<book_name<<endl;
            cout<<book_author<<endl;
            cout << "Either you haven't borrowed or the student is not in the list" << endl;
            goto main; 
        }
        
        else if(choice == 5){
            string book_name;
            cout << "Please enter the name of the book: ";
            cin.ignore();
            getline(cin,book_name);
            
            int checker = 0;
            for(int i=0; i<100; i++){
                // If the data matches what the user has enterd it will displat the rest info
                if(catalog[i][0] == book_name){
                   cout <<"The book's name is " << catalog[i][0] << endl;
                   cout << "The book's author is " << catalog[i][1] << endl; 
                   checker = 1;
                }
            }
            
goto main;
            if(checker == 0){
                cout << "The book doesnt exist" << endl;
            }goto main;
        }
        else if(choice == 6){
            for(int i=0; i<book_counter; i++){     
                // if (i == 0){
                //     cout << "Digital Electronics:" << endl;
                //     cout << "########################################################"<< endl;
                // }
                // else if (i == 5){
                //     cout << "C++:" << endl;
                //     cout << "########################################################"<< endl;
                // }
                // else if (i == 10)
                // {   cout << "Java:" << endl;
                //     cout << "########################################################"<< endl;
                // }
                // else if (i == 15)
                // {   
                //     cout << "Python:" << endl;
                //     cout << "########################################################"<< endl;
                //     }
                // else if (i == 20)
                // {   
                //     cout << "Networking:" << endl;
                //     cout << "########################################################"<< endl;
                // }
                // else if (i == 37)
                //     {cout << "Date Structures:" << endl;
                //     cout << "########################################################"<< endl;
                // } 


                // Prints all the data excpet the one's with 0 cause we assign 0 as removed books
                if(catalog[i][0] != "0" && catalog[i][1] != "0"){                     
                    cout <<"The book's name is " << catalog[i][0] << endl;
                    cout << "The book's author is " << catalog[i][1] << endl; 
                    cout << "###############################################" << endl; 
                }               
            }
            cout<< book_counter << " books are in the catalog"<< endl;
        }
        else if(choice == 7){
            A:
            string name,gender,phone_number;

            cout << "What is ur name: ";
            cin >> name;

            cout << "What is ur gender: ";
            cin >> gender;

            cout << "What is ur phone number: ";
            cin >> phone_number;

            string Gender = "Gender : " + gender;
            string Phone_number = "Phone Number: " + phone_number;
            
            for(int i=0; i<=patron_counter; i++){
                if(patron_info[patron_counter][0] == name){
                    cout << "The Student Exists" << endl;
                    goto A;
                }
                
            }
            patron_info[patron_counter][0] = name;
            patron_info[patron_counter][1] = Gender;
            patron_info[patron_counter][2] = Phone_number;
            patron_info[patron_counter][3] = to_string(patron_counter + 1);

            patron_counter ++;
             cout << "\033[H\033[2J";
             cout<<name<<endl;
            cout<<gender<<endl;
            cout<<Phone_number<<endl;
            

            cout << "Succesfully added!"<< endl;
        }
        else if(choice == 8){
            for(int i=0; i<patron_counter; i++){
                cout << "########################################################"<< endl;
                cout << "Name: "<< patron_info[i][0] << endl;
                cout << patron_info[i][1] << endl;
                cout << patron_info[i][2] << endl;
                cout << "ID: " << patron_info[i][3] << endl;
            }
        }
        else if(choice == 9){
            string name;
            int checker = 0;
            cout << "What is the name of the patron u want to search : "<< endl;
            cin.ignore();
            getline(cin,name);

            for(int i=0; i<patron_counter; i++){
                if(patron_info[i][0] == name){
                    cout << "########################################################" << endl;
                    cout << "Name: "<< patron_info[i][0] << endl;
                    cout << patron_info[i][1] << endl;
                    cout << patron_info[i][2] << endl;
                    cout << "ID: " << patron_info[i][3] << endl;
                    checker = 1;
                }
            }
            if(checker == 0){
                cout << "The Pateron Doesn't Exist "<< endl;goto main;
            }

        }
        else if(choice == 10){
            // Looping through and pring taken books
            cout << "List of taken Books" << endl;
            for(int i=0; i<taken_counter; i++){
                cout << taken_books[i] << endl;
            }
            // Looping through and printing id and how many times they took
            cout << "CAUTION: for security issu we will not be showing student name" << endl;
            for(int i=0; i<info_counter; i++){
                cout << "Student with ID: "<< info_borrowed[i][0] << " has borrowed " << info_borrowed[i][1] <<" Times"<<endl;
            }
        }
        else if(choice == 0){
            exit(0);
        }
    }
}
